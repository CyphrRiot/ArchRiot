# ArchRiot YAML Package Configuration

core:
    sudo:
        packages: []
        configs: []
        commands:
            - "sudo -n true || (echo 'Setting up passwordless sudo...' && sudo usermod -aG wheel $USER)"
            - "sudo grep -q '^%wheel.*NOPASSWD.*ALL' /etc/sudoers || echo '%wheel ALL=(ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers"
            - "sudo -k && sudo -n true"
        depends: []
        description: "Setup passwordless sudo for installation"

    base:
        packages:
            - base-devel
            - git
            - rsync
            - bc
            - go-yq
        configs:
            - pattern: fish/*
              preserve_if_exists: []
            - pattern: environment.d/*
              preserve_if_exists: []
        depends: [core.sudo]
        description: "Base development tools and yay AUR helper"

    identity:
        packages: []
        configs: []
        depends: [core.base]
        description: "User identity and Git configuration"

    shell:
        packages:
            - fish
            - starship
            - inetutils
            - neovim
            - kitty
            - fd
            - fzf
            - ripgrep
            - zoxide
            - bat
            - lsd
            - wl-clipboard
            - man
            - less
            - whois
            - tldr
            - plocate
        configs:
            - pattern: fish/*
              preserve_if_exists: []
        commands:
            - "sudo chsh -s /usr/bin/fish $USER"
        depends: [core.base]
        description: "Fish shell and terminal tools"

desktop:
    hyprland:
        packages:
            - hyprland
            - waybar
            - fuzzel
            - mako
            - hyprlock
            - hypridle
            - swaybg
        configs:
            - pattern: hypr/*
              preserve_if_exists: []
            - pattern: waybar/*
              preserve_if_exists: []
            - pattern: fuzzel/*
              preserve_if_exists: []
            - pattern: mako/*
              preserve_if_exists: []
        depends: [core.base]
        description: "Hyprland desktop environment"

    apps:
        packages:
            - ghostty
            - thunar
            - brave-bin
            - signal-desktop
        configs:
            - pattern: ghostty/*
              preserve_if_exists: []
        depends: [desktop.hyprland]
        description: "Essential desktop applications"

development:
    tools:
        packages:
            - zed
            - tree
        configs:
            - pattern: zed/*
              preserve_if_exists: [settings.json]
            - pattern: btop/*
              preserve_if_exists: []
        depends: [core.base]
        description: "Development tools and utilities"

    helpers:
        packages:
            - clang
            - cmake
            - ninja
            - rust
            - python-pip
            - go
            - github-cli
            - jq
            - zip
            - tmux
        configs: []
        commands:
            - "mkdir -p ~/.local/bin"
            - "curl -L -o ~/.local/bin/migrate https://raw.githubusercontent.com/CyphrRiot/Migrate/main/bin/migrate"
            - "chmod +x ~/.local/bin/migrate"
        depends: [core.base]
        description: "Development tools, compilers, and utilities"

    editors:
        packages:
            - tree-sitter-cli
            - lua-language-server
            - pyright
            - typescript-language-server
            - bash-language-server
            - gopls
        configs: []
        commands:
            - "sudo ln -sf /usr/bin/nvim /usr/bin/vi"
        depends: [core.base]
        description: "Neovim editor with LSP servers for development"

system:
    fonts:
        packages:
            - ttf-font-awesome
            - noto-fonts
            - ttf-hack-nerd
            - ttf-cascadia-mono-nerd
            - ttf-ia-writer
        configs: []
        commands:
            - "fc-cache -f"
        depends: [core.base]
        description: "System fonts and programming fonts with cache refresh"

    bluetooth:
        packages:
            - blueberry
        configs: []
        commands:
            - "sudo systemctl enable --now bluetooth.service"
        depends: [core.base]
        description: "Bluetooth management with Blueberry GUI"

    printer:
        packages:
            - cups
            - cups-pdf
            - cups-filters
            - system-config-printer
        configs: []
        commands:
            - "sudo systemctl enable --now cups.service"
        depends: [core.base]
        description: "Printing system with CUPS and configuration GUI"

    power:
        packages:
            - power-profiles-daemon
            - powertop
        configs: []
        commands:
            - "sudo systemctl enable --now power-profiles-daemon.service"
        depends: [core.base]
        description: "Power management with profiles daemon and monitoring"

    filesystems:
        packages:
            - gvfs
            - udisks2
            - gvfs-smb
            - gvfs-mtp
            - ntfs-3g
            - dosfstools
            - exfatprogs
        configs: []
        commands:
            - "sudo systemctl enable --now udisks2.service"
        depends: [core.base]
        description: "Filesystem support for GUI mounting and network shares"

    networking:
        packages:
            - iwd
        configs: []
        commands:
            - "sudo systemctl enable --now iwd.service"
        depends: [core.base]
        description: "Wireless networking with iwd"

    audio:
        packages:
            - pipewire
            - pipewire-alsa
            - pipewire-pulse
            - pipewire-audio
            - pipewire-jack
            - gst-plugin-pipewire
            - libpipewire
            - wireplumber
            - pavucontrol
            - pamixer
            - playerctl
        configs: []
        commands:
            - "pacman -Qs ^pulseaudio$ && sudo pacman -Rdd --noconfirm pulseaudio || true"
            - "pacman -Qs ^jack2$ && sudo pacman -Rdd --noconfirm jack2 || true"
            - "systemctl --user enable --now pipewire.service"
            - "systemctl --user enable --now pipewire-pulse.service"
            - "systemctl --user enable --now wireplumber.service"
        depends: [core.base]
        description: "PipeWire audio system with conflict resolution and controls"

    memory:
        packages: []
        configs: []
        commands:
            - "sudo cp ~/.local/share/archriot/config/system/99-memory-optimization.conf /etc/sysctl.d/99-memory-optimization.conf"
            - "sudo sysctl -p /etc/sysctl.d/99-memory-optimization.conf"
        depends: [core.base]
        description: "Memory optimization with sysctl configuration for better performance"

    mimetypes:
        packages: []
        configs: []
        commands:
            - "update-desktop-database ~/.local/share/applications"
            - "xdg-mime default imv.desktop image/png"
            - "xdg-mime default imv.desktop image/jpeg"
            - "xdg-mime default imv.desktop image/gif"
            - "xdg-mime default imv.desktop image/webp"
            - "xdg-mime default imv.desktop image/bmp"
            - "xdg-mime default imv.desktop image/tiff"
            - "xdg-mime default org.gnome.Papers.desktop application/pdf"
            - "xdg-settings set default-web-browser brave-browser.desktop"
            - "xdg-mime default brave-browser.desktop x-scheme-handler/http"
            - "xdg-mime default brave-browser.desktop x-scheme-handler/https"
            - "xdg-mime default org.gnome.TextEditor.desktop text/plain"
            - "xdg-mime default org.gnome.TextEditor.desktop text/markdown"
            - "xdg-mime default org.gnome.TextEditor.desktop text/x-markdown"
            - "xdg-mime default org.gnome.TextEditor.desktop application/x-markdown"
            - "xdg-mime default mpv.desktop video/mp4"
            - "xdg-mime default mpv.desktop video/x-msvideo"
            - "xdg-mime default mpv.desktop video/x-matroska"
            - "xdg-mime default mpv.desktop video/x-flv"
            - "xdg-mime default mpv.desktop video/x-ms-wmv"
            - "xdg-mime default mpv.desktop video/mpeg"
            - "xdg-mime default mpv.desktop video/ogg"
            - "xdg-mime default mpv.desktop video/webm"
            - "xdg-mime default mpv.desktop video/quicktime"
            - "xdg-mime default mpv.desktop video/3gpp"
            - "xdg-mime default mpv.desktop video/3gpp2"
            - "xdg-mime default mpv.desktop video/x-ms-asf"
            - "xdg-mime default mpv.desktop video/x-ogm+ogg"
            - "xdg-mime default mpv.desktop video/x-theora+ogg"
            - "xdg-mime default mpv.desktop application/ogg"
        depends: [core.base]
        description: "Default application associations for file types"

media:
    players:
        packages:
            - mpv
            - lollypop
            - ffmpeg
            - yt-dlp
            - python-opencv
            - spotdl
        configs: []
        commands:
            - "yay -S --noconfirm --needed --mflags --nocheck spotdl"
        depends: [desktop.hyprland]
        description: "Media players, downloaders, and webcam support"
