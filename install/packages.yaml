# ArchRiot YAML Package Configuration

core:
    base:
        packages:
            - base-devel
            - git
            - rsync
            - bc
            - go-yq
            - python
            - python-psutil
            - fastfetch
            - linux-firmware
            - efibootmgr
        configs:
            - pattern: environment.d/editor.conf
            - pattern: environment.d/fcitx.conf
            - pattern: fastfetch/*
            - pattern: systemd/*
        commands:
            - "python3 -c 'import psutil'"
            - "systemctl --user daemon-reload"
            - "systemctl --user enable version-check.timer 2>/dev/null || true"
            - "systemctl --user start version-check.timer 2>/dev/null || true"
            - "systemctl --user enable battery-monitor.timer 2>/dev/null || true"
            - "systemctl --user start battery-monitor.timer 2>/dev/null || true"
        depends: []
        start: "Installing base development tools"
        end: "Base tools installed"
        type: "Package"

    identity:
        commands:
            - "git config --global alias.co checkout"
            - "git config --global alias.br branch"
            - "git config --global alias.ci commit"
            - "git config --global alias.st status"
            - "git config --global pull.rebase true"
            - "git config --global init.defaultBranch master"
        depends: [core.base]
        start: "Configuring Git identity"
        end: "Git identity configured"
        type: "Git"

    shell:
        packages:
            - fish
            - starship
            - inetutils
            - neovim
            - kitty
            - pv
            - fd
            - fzf
            - ripgrep
            - zoxide
            - bat
            - lsd
            - wl-clipboard
            - man
            - less
            - whois
            - tldr
            - plocate
        configs:
            - pattern: fish/*
            - pattern: nvim/*
            - pattern: default/tmux.conf
              target: ~/.config/tmux/tmux.conf
        commands:
            - "sudo chsh -s /usr/bin/fish $USER"
        depends: [core.base]
        start: "Installing shell and terminal tools"
        end: "Shell environment configured"
        type: "Package"

desktop:
    hyprland:
        packages:
            - hyprland
            - waybar
            - fuzzel
            - mako
            - hyprlock
            - hypridle
            - swaybg
            - hyprshot
        configs:
            - pattern: hypr/*
              preserve_if_exists: [monitors.conf]
            - pattern: waybar/*
            - pattern: fuzzel/*
            - pattern: mako/*
            - pattern: Thunar/*
              preserve_if_exists: [accels.scm]
            - pattern: bin/upgrade-system
              target: ~/.local/bin/
            - pattern: applications/*
              target: ~/.local/share/applications/
        commands:
            - "mkdir -p ~/.local/bin && chmod +x ~/.local/bin/* 2>/dev/null || true"
            - "chmod +x ~/.local/share/archriot/config/bin/* "
            - "chmod +x ~/.local/share/archriot/config/bin/scripts/*"
            - "chmod +x ~/.config/waybar/scripts/* 2>/dev/null || true"
            - "~/.local/share/archriot/config/bin/setup-temperature"
            - "mkdir -p ~/.local/share/applications && update-desktop-database ~/.local/share/applications/"
            - 'for dm in sddm gdm lightdm lxdm; do if pacman -Qi "$dm" &>/dev/null; then sudo systemctl stop "$dm" 2>/dev/null || true; sudo systemctl disable "$dm" 2>/dev/null || true; sudo pacman -Rns --noconfirm "$dm" 2>/dev/null || true; fi; done'
            - "sudo mkdir -p /etc/systemd/system/getty@tty1.service.d"
            - "bash -c 'ACTUAL_USER=$(logname 2>/dev/null || who am i | awk \"{print \\$1}\") && echo -e \"[Service]\\nExecStart=\\nExecStart=-/usr/bin/agetty --autologin $ACTUAL_USER --noclear %I \\$TERM\" | sudo tee /etc/systemd/system/getty@tty1.service.d/override.conf >/dev/null'"
        depends: [core.base]
        start: "Installing Hyprland desktop"
        end: "Hyprland desktop installed"
        type: "Package"

    apps:
        packages:
            - ghostty
            - ghostty-shell-integration
            - thunar
            - thunar-volman
            - thunar-archive-plugin
            - brave-bin
            - signal-desktop
            - brightnessctl
            - xdg-user-dirs
            - hyprsunset
            - tumbler
            - ffmpegthumbnailer
            - papers
            - unzip
            - p7zip
            - libwebp
            - libheif
            - libavif
            - raw-thumbnailer
            - gnome-calculator
            - nwg-drawer
            - imv
            - mullvad-vpn-bin
            - ufw
            - kooha
            - gst-plugins-good
            - gst-plugins-bad
            - gst-plugins-ugly
            - gst-libav
            - gst-plugin-pipewire
            - gstreamer-vaapi
            - gst-plugins-base
        configs:
            - pattern: ghostty/*
            - pattern: xdg-desktop-portal/*
        commands:
            - "pkill wl-clip-persist 2>/dev/null || true"
            - "yay -Rns --noconfirm wl-clip-persist 2>/dev/null || true"
            - "sudo mv /usr/share/thumbnailers/papers.thumbnailer /usr/share/thumbnailers/papers.thumbnailer.disabled 2>/dev/null || true"
            - "sudo mv /usr/share/thumbnailers/evince.thumbnailer /usr/share/thumbnailers/evince.thumbnailer.disabled 2>/dev/null || true"
            - "xdg-user-dirs-update"
        depends: [desktop.hyprland]
        start: "Installing desktop applications"
        end: "Desktop applications installed"
        type: "Package"

    editors:
        packages:
            - gnome-text-editor
        configs:
            - pattern: text-editor/*
        commands:
            - "gsettings set org.gnome.TextEditor show-line-numbers true"
            - "gsettings set org.gnome.TextEditor highlight-current-line true"
            - "gsettings set org.gnome.TextEditor show-right-margin false"
            - "gsettings set org.gnome.TextEditor custom-font 'Hack Nerd Font Mono 12'"
            - "gsettings set org.gnome.TextEditor line-height 1.2"
            - "gsettings set org.gnome.TextEditor use-system-font false"
            - "gsettings set org.gnome.TextEditor style-scheme 'tokyo-night'"
        depends: [core.base]
        start: "Installing text editors"
        end: "Text editors configured"
        type: "Package"

    utilities:
        packages:
            - gnome-system-monitor
            - iwgtk
            - file-roller
            - secrets
            - featherwallet-bin
            - fragments
            - wget
        configs:
            - pattern: applications/*
        commands:
            - "mkdir -p ~/.local/share/applications && update-desktop-database ~/.local/share/applications/"
        depends: [core.base]
        start: "Installing desktop utilities"
        end: "Desktop utilities installed"
        type: "Package"

development:
    tools:
        packages:
            - zed
            - tree
            - btop
        configs:
            - pattern: zed/*
              preserve_if_exists: [settings.json]
            - pattern: btop/*
        commands:
            - "ln -sf /usr/bin/zeditor ~/.local/bin/zed"
        depends: [core.base, system.hardware]
        start: "Installing development tools"
        end: "Development tools installed"
        type: "Package"

    helpers:
        packages:
            - clang
            - cmake
            - ninja
            - rust
            - python-pip
            - go
            - github-cli
            - jq
            - zip
            - tmux
        commands:
            - "mkdir -p ~/.local/bin"
            - "curl -L -o ~/.local/bin/migrate https://raw.githubusercontent.com/CyphrRiot/Migrate/main/bin/migrate"
            - "chmod +x ~/.local/bin/migrate"
        depends: [core.base]
        start: "Installing development helpers"
        end: "Development helpers installed"
        type: "Package"

    editors:
        packages:
            - tree-sitter-cli
            - lua-language-server
            - pyright
            - typescript-language-server
            - bash-language-server
            - gopls
        commands:
            - "sudo ln -sf /usr/bin/nvim /usr/bin/vi"
        depends: [core.base]
        start: "Installing editor and LSP servers"
        end: "Editor environment configured"
        type: "Package"

system:
    fonts:
        packages:
            - ttf-font-awesome
            - noto-fonts
            - ttf-hack-nerd
            - ttf-cascadia-mono-nerd
            - ttf-ia-writer
        commands:
            - "fc-cache -f"
        depends: [core.base]
        start: "Installing system fonts"
        end: "Fonts installed and cached"
        type: "System"

    bluetooth:
        packages:
            - blueberry
        commands:
            - "sudo systemctl enable --now bluetooth.service"
        depends: [core.base]
        start: "Setting up Bluetooth"
        end: "Bluetooth configured"
        type: "System"

    printer:
        packages:
            - cups
            - cups-pdf
            - cups-filters
            - system-config-printer

        commands:
            - "sudo systemctl enable --now cups.service"
        depends: [core.base]
        start: "Installing printing system"
        end: "Printing system configured"
        type: "System"

    power:
        packages:
            - power-profiles-daemon
            - powertop

        commands:
            - "sudo systemctl enable --now power-profiles-daemon.service"
        depends: [core.base]
        start: "Configuring power management"
        end: "Power management configured"
        type: "System"

    filesystems:
        packages:
            - gvfs
            - udisks2
            - gvfs-smb
            - gvfs-mtp
            - ntfs-3g
            - dosfstools
            - exfatprogs

        commands:
            - "sudo systemctl enable --now udisks2.service"
        depends: [core.base]
        start: "Installing filesystem support"
        end: "Filesystem support configured"
        type: "System"

    networking:
        packages:
            - iwd

        commands:
            - "sudo systemctl enable --now iwd.service"
        depends: [core.base]
        start: "Configuring wireless networking"
        end: "Wireless networking configured"
        type: "System"

    audio:
        packages:
            - pipewire
            - pipewire-alsa
            - pipewire-pulse
            - pipewire-audio
            - pipewire-jack
            - gst-plugin-pipewire
            - libpipewire
            - wireplumber
            - pavucontrol
            - pamixer
            - playerctl

        commands:
            - "pacman -Qs ^pulseaudio$ && sudo pacman -Rdd --noconfirm pulseaudio || true"
            - "pacman -Qs ^jack2$ && sudo pacman -Rdd --noconfirm jack2 || true"
            - "systemctl --user enable --now pipewire.service"
            - "systemctl --user enable --now pipewire-pulse.service"
            - "systemctl --user enable --now wireplumber.service"
        depends: [core.base]
        start: "Installing PipeWire audio system"
        end: "Audio system configured"
        type: "System"

    memory:
        commands:
            - "sudo cp ~/.local/share/archriot/config/system/99-memory-optimization.conf /etc/sysctl.d/99-memory-optimization.conf"
            - "sudo sysctl -p /etc/sysctl.d/99-memory-optimization.conf"
        depends: [core.base]
        start: "Optimizing memory settings"
        end: "Memory optimization applied"
        type: "System"

    mimetypes:
        commands:
            - "mkdir -p ~/.local/share/applications && update-desktop-database ~/.local/share/applications"
            - "xdg-mime default imv.desktop image/png"
            - "xdg-mime default imv.desktop image/jpeg"
            - "xdg-mime default imv.desktop image/gif"
            - "xdg-mime default imv.desktop image/webp"
            - "xdg-mime default imv.desktop image/bmp"
            - "xdg-mime default imv.desktop image/tiff"
            - "xdg-mime default org.gnome.Papers.desktop application/pdf"
            - "xdg-settings set default-web-browser brave-browser.desktop"
            - "xdg-mime default brave-browser.desktop x-scheme-handler/http"
            - "xdg-mime default brave-browser.desktop x-scheme-handler/https"
            - "xdg-mime default org.gnome.TextEditor.desktop text/plain"
            - "xdg-mime default org.gnome.TextEditor.desktop text/markdown"
            - "xdg-mime default org.gnome.TextEditor.desktop text/x-markdown"
            - "xdg-mime default org.gnome.TextEditor.desktop application/x-markdown"
            - "xdg-mime default mpv.desktop video/mp4"
            - "xdg-mime default mpv.desktop video/x-msvideo"
            - "xdg-mime default mpv.desktop video/x-matroska"
            - "xdg-mime default mpv.desktop video/x-flv"
            - "xdg-mime default mpv.desktop video/x-ms-wmv"
            - "xdg-mime default mpv.desktop video/mpeg"
            - "xdg-mime default mpv.desktop video/ogg"
            - "xdg-mime default mpv.desktop video/webm"
            - "xdg-mime default mpv.desktop video/quicktime"
            - "xdg-mime default mpv.desktop video/3gpp"
            - "xdg-mime default mpv.desktop video/3gpp2"
            - "xdg-mime default mpv.desktop video/x-ms-asf"
            - "xdg-mime default mpv.desktop video/x-ogm+ogg"
            - "xdg-mime default mpv.desktop video/x-theora+ogg"
            - "xdg-mime default mpv.desktop application/ogg"
        depends: [desktop.apps]
        start: "Configuring file associations"
        end: "File associations configured"
        type: "System"

    privacy:
        commands:
            - "gsettings set org.gnome.desktop.privacy remember-recent-files false || true"
            - "rm -f ~/.local/share/recently-used.xbel"
        depends: [core.base]
        start: "Configuring desktop privacy"
        end: "Privacy settings applied"
        type: "System"

    hardware:
        packages:
            - usbutils
            - pciutils
            - vulkan-icd-loader
            - vulkan-tools

        commands:
            - "sudo sed -i '/^#\\[multilib\\]/,/^#Include/ s/^#//' /etc/pacman.conf"
            - "if lspci | grep -qi nvidia; then yay -S --noconfirm --needed nvidia-dkms nvidia-utils lib32-nvidia-utils; fi"
            - "if lspci | grep -qi -E 'amd|radeon'; then yay -S --noconfirm --needed mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon; fi"
            - "if lspci | grep -i intel | grep -qi -E 'vga|3d|display|graphics'; then yay -S --noconfirm --needed mesa lib32-mesa vulkan-intel lib32-vulkan-intel intel-media-driver intel-gmmlib libva-intel-driver; fi"
            - "if command -v lsusb >/dev/null 2>&1 && lsusb | grep -i apple | grep -qi keyboard; then echo 'options hid_apple fnmode=2' | sudo tee /etc/modprobe.d/hid_apple.conf >/dev/null; fi"
            - "mkdir -p ~/.config/environment.d"
            - "if lspci | grep -qi -E 'amd|radeon'; then cp ~/.local/share/archriot/config/environment.d/graphics-amd.conf ~/.config/environment.d/graphics.conf; fi"
            - "if lspci | grep -qi nvidia; then cp ~/.local/share/archriot/config/environment.d/graphics-nvidia.conf ~/.config/environment.d/graphics.conf; fi"
            - "if lspci | grep -i intel | grep -qi -E 'vga|3d|display|graphics'; then cp ~/.local/share/archriot/config/environment.d/graphics-intel.conf ~/.config/environment.d/graphics.conf; fi"
            - "systemctl --user daemon-reload"
            - "if lspci | grep -qi -E 'amd|radeon'; then systemctl --user set-environment GSK_RENDERER=gl LIBGL_ALWAYS_SOFTWARE=1 mesa_glthread=true MESA_GL_VERSION_OVERRIDE=4.6 MESA_GLSL_VERSION_OVERRIDE=460; fi"
            - "if lspci | grep -qi nvidia; then systemctl --user set-environment GSK_RENDERER=gl __GL_THREADED_OPTIMIZATIONS=1; fi"
            - "if lspci | grep -i intel | grep -qi -E 'vga|3d|display|graphics'; then systemctl --user set-environment GSK_RENDERER=gl; fi"
        depends: [core.base]
        start: "Setting up hardware drivers"
        end: "Hardware drivers configured"
        type: "System"

    themes:
        packages:
            - bibata-cursor-theme
            - kora-icon-theme
            - tela-circle-icon-theme-purple
            - gnome-themes-extra
            - kvantum-qt5
        configs:
            - pattern: default/icons/*
              target: ~/.icons/
            - pattern: gtk-3.0/*
            - pattern: gtk-4.0/*
        commands:
            - 'gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark"'
            - 'gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"'
            - 'gsettings set org.gnome.desktop.wm.preferences theme "Adwaita-dark"'
            - 'gsettings set org.gnome.desktop.interface icon-theme "Tela-purple-dark"'
            - 'gsettings set org.gnome.desktop.interface cursor-theme "Bibata-Modern-Ice"'
            - "gsettings set org.gnome.desktop.interface cursor-size 24"
            - 'gsettings set org.gnome.desktop.wm.preferences button-layout ":minimize,maximize,close"'
            - "mkdir -p ~/.config/gtk-3.0 && [ ! -f ~/.config/gtk-3.0/bookmarks ] && echo -e \"file://$HOME/Documents\\nfile://$HOME/Downloads\\nfile://$HOME/Music\\nfile://$HOME/Pictures\\nfile://$HOME/Videos\" > ~/.config/gtk-3.0/bookmarks || true"
            - "sudo usermod -a -G video $USER"
        depends: [core.base]
        start: "Installing desktop themes"
        end: "Desktop themes configured"
        type: "Package"

    backgrounds:
        commands:
            - "pkill swaybg 2>/dev/null || true"
            - "rm -f ~/.config/archriot/backgrounds/riot_*.jpg ~/.config/archriot/backgrounds/riot_*.png 2>/dev/null || true"
            - |
                # Restore user background if exists, otherwise use default
                CURRENT_BG_FILE="$HOME/.config/archriot/.current-background"
                DEFAULT_BG="$HOME/.local/share/archriot/backgrounds/riot_01.jpg"

                if [[ -f "$CURRENT_BG_FILE" ]]; then
                  SAVED_BG=$(cat "$CURRENT_BG_FILE" 2>/dev/null)
                  if [[ -f "$SAVED_BG" ]]; then
                    nohup swaybg -i "$SAVED_BG" -m fill >/dev/null 2>&1 & disown
                  elif [[ -f "$DEFAULT_BG" ]]; then
                    nohup swaybg -i "$DEFAULT_BG" -m fill >/dev/null 2>&1 & disown
                  fi
                elif [[ -f "$DEFAULT_BG" ]]; then
                  nohup swaybg -i "$DEFAULT_BG" -m fill >/dev/null 2>&1 & disown
                fi
            - "pkill waybar 2>/dev/null || true"
            - "nohup waybar >/dev/null 2>&1 & disown"
            - "hyprctl reload"
        depends: [desktop.hyprland]
        start: "Setting up wallpapers"
        end: "Background service started"
        type: "System"

media:
    players:
        packages:
            - mpv
            - lollypop
            - ffmpeg
            - yt-dlp
        configs:
            - pattern: yt-dlp/*
        commands: []
        depends: [desktop.hyprland]
        start: "Installing media players"
        end: "Media players installed"
        type: "Package"
