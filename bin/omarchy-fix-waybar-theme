#!/bin/bash

# =============================================================================
# OhmArchy Waybar Theme Fix
# Fixes theme CSS linking and ensures proper Waybar styling
# =============================================================================

echo "üé® Fixing Waybar theme and styling issues..."

# Define directories
THEMES_DIR="$HOME/.config/omarchy/themes"
CURRENT_THEME_LINK="$HOME/.config/omarchy/current/theme"
WAYBAR_CONFIG_DIR="$HOME/.config/waybar"
REPO_THEMES_DIR="$HOME/.local/share/omarchy/themes"

# Check if current theme is linked
if [[ ! -L "$CURRENT_THEME_LINK" ]]; then
    echo "‚ùå No current theme linked"
    echo "   Please run omarchy-theme-next to set a theme first"
    exit 1
fi

# Get current theme name and path
CURRENT_THEME=$(readlink "$CURRENT_THEME_LINK")
THEME_NAME=$(basename "$CURRENT_THEME")

echo "üîç Current theme: $THEME_NAME"

# Check if theme has waybar.css
THEME_WAYBAR_CSS="$CURRENT_THEME/waybar.css"
if [[ ! -f "$THEME_WAYBAR_CSS" ]]; then
    echo "‚ö† Theme $THEME_NAME doesn't have waybar.css"
    echo "   Using repository default waybar styling"

    # Use the main config waybar style.css as fallback
    REPO_WAYBAR_CSS="$HOME/.local/share/omarchy/config/waybar/style.css"
    if [[ -f "$REPO_WAYBAR_CSS" ]]; then
        cp "$REPO_WAYBAR_CSS" "$WAYBAR_CONFIG_DIR/style.css"
        echo "   ‚úì Applied repository default waybar styling"
    else
        echo "   ‚ùå No fallback waybar CSS found"
        exit 1
    fi
else
    echo "üìã Applying theme-specific waybar styling..."

    # Backup current waybar CSS
    if [[ -f "$WAYBAR_CONFIG_DIR/style.css" ]]; then
        cp "$WAYBAR_CONFIG_DIR/style.css" "$WAYBAR_CONFIG_DIR/style.css.backup.$(date +%s)"
        echo "   ‚úì Backed up current waybar CSS"
    fi

    # Copy theme waybar CSS
    cp "$THEME_WAYBAR_CSS" "$WAYBAR_CONFIG_DIR/style.css"
    echo "   ‚úì Applied $THEME_NAME waybar styling"
fi

# Apply microphone transparency fixes to the active CSS
echo "üé§ Fixing microphone background transparency..."

# Create a temporary CSS fix
CSS_FIX=$(cat << 'EOF'

/* Microphone transparency fixes */
#custom-mic {
    background: transparent;
    background-color: transparent;
}

#custom-mic.muted {
    background: transparent;
    background-color: transparent;
}

#custom-mic:hover {
    background: transparent;
    background-color: transparent;
}

#custom-mic.muted:hover {
    background: transparent;
    background-color: transparent;
}

/* Additional specific selectors to override any inherited styles */
.modules-right #custom-mic,
.modules-right #custom-mic.muted,
widget > #custom-mic,
widget > #custom-mic.muted {
    background: transparent;
    background-color: transparent;
}
EOF
)

# Check if the fixes are already present
if ! grep -q "Microphone transparency fixes" "$WAYBAR_CONFIG_DIR/style.css"; then
    echo "$CSS_FIX" >> "$WAYBAR_CONFIG_DIR/style.css"
    echo "   ‚úì Added microphone transparency fixes"
else
    echo "   ‚úì Microphone transparency fixes already present"
fi

# Fix any theme-specific CSS files to ensure consistency
if [[ -f "$THEME_WAYBAR_CSS" ]]; then
    echo "üîß Updating theme source CSS for consistency..."

    # Use sed to replace microphone background properties
    sed -i 's/background: rgba([^)]*)/background: transparent/g' "$THEME_WAYBAR_CSS"
    sed -i 's/background-color: rgba([^)]*)/background-color: transparent/g' "$THEME_WAYBAR_CSS"

    # Specifically target custom-mic sections
    sed -i '/^#custom-mic/,/^}/ s/background: [^;]*/background: transparent/g' "$THEME_WAYBAR_CSS"
    sed -i '/^#custom-mic/,/^}/ s/background-color: [^;]*/background-color: transparent/g' "$THEME_WAYBAR_CSS"

    echo "   ‚úì Updated theme source CSS"
fi

# Validate waybar configuration
echo "üîç Validating waybar configuration..."
if [[ -f "$WAYBAR_CONFIG_DIR/config" ]]; then
    echo "   ‚úì Waybar config file exists"
else
    echo "   ‚ö† Waybar config file missing"
fi

if [[ -f "$WAYBAR_CONFIG_DIR/style.css" ]]; then
    echo "   ‚úì Waybar style file exists"
    FILE_SIZE=$(stat -c%s "$WAYBAR_CONFIG_DIR/style.css")
    echo "   ‚úì Style file size: ${FILE_SIZE} bytes"
else
    echo "   ‚ùå Waybar style file missing"
    exit 1
fi

# Clear waybar cache if it exists
WAYBAR_CACHE_DIR="$HOME/.cache/waybar"
if [[ -d "$WAYBAR_CACHE_DIR" ]]; then
    rm -rf "$WAYBAR_CACHE_DIR"
    echo "   ‚úì Cleared waybar cache"
fi

# Restart waybar with proper error handling
echo "üîÑ Restarting waybar..."
pkill waybar 2>/dev/null || true
sleep 2

# Start waybar in background
if command -v waybar >/dev/null; then
    setsid waybar >/dev/null 2>&1 &
    sleep 2

    # Check if waybar started successfully
    if pgrep waybar >/dev/null; then
        echo "   ‚úì Waybar restarted successfully"
    else
        echo "   ‚ö† Waybar may not have started properly"
        echo "   Try starting manually: waybar"
    fi
else
    echo "   ‚ùå Waybar command not found"
    exit 1
fi

# Create a theme update hook for future theme changes
HOOK_SCRIPT="$HOME/.config/omarchy/hooks/waybar-theme-update.sh"
mkdir -p "$(dirname "$HOOK_SCRIPT")"

cat > "$HOOK_SCRIPT" << 'EOF'
#!/bin/bash
# Auto-generated hook to maintain waybar theme consistency
# This script is called when themes are changed

CURRENT_THEME_LINK="$HOME/.config/omarchy/current/theme"
WAYBAR_CONFIG_DIR="$HOME/.config/waybar"

if [[ -L "$CURRENT_THEME_LINK" ]]; then
    CURRENT_THEME=$(readlink "$CURRENT_THEME_LINK")
    THEME_WAYBAR_CSS="$CURRENT_THEME/waybar.css"

    if [[ -f "$THEME_WAYBAR_CSS" ]]; then
        cp "$THEME_WAYBAR_CSS" "$WAYBAR_CONFIG_DIR/style.css"

        # Ensure microphone transparency
        if ! grep -q "Microphone transparency fixes" "$WAYBAR_CONFIG_DIR/style.css"; then
            cat >> "$WAYBAR_CONFIG_DIR/style.css" << 'INNER_EOF'

/* Microphone transparency fixes */
#custom-mic, #custom-mic.muted, #custom-mic:hover, #custom-mic.muted:hover {
    background: transparent;
    background-color: transparent;
}
INNER_EOF
        fi

        # Restart waybar
        pkill waybar 2>/dev/null || true
        sleep 1
        setsid waybar >/dev/null 2>&1 &
    fi
fi
EOF

chmod +x "$HOOK_SCRIPT"
echo "   ‚úì Created theme update hook"

echo ""
echo "‚úÖ Waybar theme fix complete!"
echo ""
echo "üìã What was fixed:"
echo "  ‚Ä¢ Applied correct theme-specific waybar CSS"
echo "  ‚Ä¢ Fixed microphone background transparency"
echo "  ‚Ä¢ Updated theme source files for consistency"
echo "  ‚Ä¢ Created automatic theme update hook"
echo "  ‚Ä¢ Restarted waybar service"
echo ""
echo "üí° Next steps:"
echo "  ‚Ä¢ Check if microphone background is now transparent"
echo "  ‚Ä¢ The fix will automatically apply to future theme changes"
echo "  ‚Ä¢ If issues persist, try: pkill waybar && waybar"
echo ""
echo "üîß Manual commands:"
echo "  ‚Ä¢ Restart waybar: pkill waybar && waybar"
echo "  ‚Ä¢ Check waybar status: pgrep waybar"
echo "  ‚Ä¢ Test theme switching: omarchy-theme-next"
echo ""
