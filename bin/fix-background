#!/bin/bash

# =============================================================================
# ArchRiot Background Fix
# Fixes background issues and properly sets CypherRiot theme backgrounds
# =============================================================================

echo "🖼️  Fixing background and theme issues..."

# Define directories
THEMES_DIR="$HOME/.config/archriot/themes"
BACKGROUNDS_DIR="$HOME/.config/archriot/backgrounds"
CURRENT_DIR="$HOME/.config/archriot/current"
CURRENT_BACKGROUND_LINK="$CURRENT_DIR/background"
CURRENT_THEME_LINK="$CURRENT_DIR/theme"

# Create necessary directories
echo "📁 Creating directories..."
mkdir -p "$THEMES_DIR"
mkdir -p "$BACKGROUNDS_DIR"
mkdir -p "$CURRENT_DIR"

# Check if CypherRiot theme exists
CYPHERRIOT_THEME="$THEMES_DIR/cypherriot"
if [[ ! -d "$CYPHERRIOT_THEME" ]]; then
    echo "❌ CypherRiot theme not found at $CYPHERRIOT_THEME"
    echo "   Creating symlink to repository theme..."

    # Find the repository theme
    REPO_THEME="$HOME/.local/share/archriot/themes/cypherriot"
    if [[ -d "$REPO_THEME" ]]; then
        ln -nsf "$REPO_THEME" "$CYPHERRIOT_THEME"
        echo "   ✓ Linked CypherRiot theme from repository"
    else
        echo "   ❌ CypherRiot theme not found in repository either"
        echo "   Please ensure the theme is properly installed"
        exit 1
    fi
fi

# Set up CypherRiot backgrounds
echo "🎨 Setting up CypherRiot backgrounds..."
CYPHERRIOT_BACKGROUNDS="$BACKGROUNDS_DIR/cypherriot"
mkdir -p "$CYPHERRIOT_BACKGROUNDS"

# Copy backgrounds from theme if they don't exist
if [[ -d "$CYPHERRIOT_THEME/backgrounds" ]]; then
    echo "  📋 Automatically discovering and copying backgrounds from theme..."

    # Clear existing numbered backgrounds to prevent duplicates/conflicts
    echo "  🗑️  Cleaning existing numbered backgrounds..."
    find "$CYPHERRIOT_BACKGROUNDS" -name "[0-9][0-9]-*" -type f -delete 2>/dev/null || true

    # Find all image files and sort them
    mapfile -t ALL_BACKGROUNDS < <(find "$CYPHERRIOT_THEME/backgrounds" -maxdepth 1 -type f \( -iname "*.png" -o -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.webp" \) | sort)

    if [[ ${#ALL_BACKGROUNDS[@]} -gt 0 ]]; then
        echo "  📋 Found ${#ALL_BACKGROUNDS[@]} background files"

        # Separate riot_zero.png from other backgrounds for priority ordering
        RIOT_ZERO=""
        OTHER_BACKGROUNDS=()

        for bg in "${ALL_BACKGROUNDS[@]}"; do
            filename=$(basename "$bg")
            if [[ "$filename" == "riot_zero.png" ]]; then
                RIOT_ZERO="$bg"
            else
                OTHER_BACKGROUNDS+=("$bg")
            fi
        done

        # Copy riot_zero.png as #1 if it exists
        counter=1
        if [[ -n "$RIOT_ZERO" ]]; then
            filename=$(basename "$RIOT_ZERO")
            dest_file="$CYPHERRIOT_BACKGROUNDS/$(printf "%02d" $counter)-$filename"

            # Only copy if source is different from destination
            if [[ "$RIOT_ZERO" != "$dest_file" ]]; then
                cp "$RIOT_ZERO" "$dest_file" 2>/dev/null || true
                echo "  ✓ Copied default: $(printf "%02d" $counter)-$filename"
            else
                echo "  ✓ Default already in place: $(printf "%02d" $counter)-$filename"
            fi
            ((counter++))
        fi

        # Copy all other backgrounds
        for bg in "${OTHER_BACKGROUNDS[@]}"; do
            if [[ -f "$bg" ]]; then
                filename=$(basename "$bg")
                dest_file="$CYPHERRIOT_BACKGROUNDS/$(printf "%02d" $counter)-$filename"

                # Only copy if source is different from destination
                if [[ "$bg" != "$dest_file" ]]; then
                    cp "$bg" "$dest_file" 2>/dev/null || true
                    echo "  ✓ Copied: $(printf "%02d" $counter)-$filename"
                else
                    echo "  ✓ Already in place: $(printf "%02d" $counter)-$filename"
                fi
                ((counter++))
            fi
        done

        echo "  ✓ CypherRiot backgrounds processed ($((counter-1)) unique backgrounds)"
    else
        echo "  ⚠ No background files found in theme directory"
    fi
else
    echo "  ⚠ CypherRiot theme backgrounds directory not found"
fi

# Remove any old cyber-1.png or similar files
echo "🗑️  Cleaning up old background references..."
find "$HOME/.config" -name "*cyber-1.png" -type f -delete 2>/dev/null || true
find "$HOME/.config" -name "*cyber-*.png" -type f -delete 2>/dev/null || true
echo "  ✓ Cleaned up old background files"

# Set current theme to CypherRiot
echo "🎯 Setting current theme to CypherRiot..."
ln -nsf "$CYPHERRIOT_THEME" "$CURRENT_THEME_LINK"
ln -nsf "$CYPHERRIOT_BACKGROUNDS" "$CURRENT_DIR/backgrounds"
echo "  ✓ Current theme set to CypherRiot"

# Set default background (riot_zero.png preferred, or first available)
echo "🖼️  Setting default background..."

# Try to find riot_zero first
DEFAULT_BACKGROUND=$(find "$CYPHERRIOT_BACKGROUNDS" -name "*riot_zero*" | head -1)

if [[ -n "$DEFAULT_BACKGROUND" && -f "$DEFAULT_BACKGROUND" ]]; then
    ln -nsf "$DEFAULT_BACKGROUND" "$CURRENT_BACKGROUND_LINK"
    echo "  ✓ Default background set to $(basename "$DEFAULT_BACKGROUND")"
else
    # Fallback to first numbered background (should be 01-)
    FALLBACK_BG=$(find "$CYPHERRIOT_BACKGROUNDS" -type f \( -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" -o -name "*.webp" \) | sort | head -1)
    if [[ -n "$FALLBACK_BG" ]]; then
        ln -nsf "$FALLBACK_BG" "$CURRENT_BACKGROUND_LINK"
        echo "  ✓ Fallback background set to $(basename "$FALLBACK_BG")"
    else
        echo "  ❌ No background files found!"
        exit 1
    fi
fi

# Verify the background file exists and is accessible
if [[ -f "$CURRENT_BACKGROUND_LINK" ]]; then
    CURRENT_BG=$(readlink "$CURRENT_BACKGROUND_LINK")
    echo "  ✓ Current background: $(basename "$CURRENT_BG")"
else
    echo "  ❌ Background link is broken!"
    exit 1
fi

# Restart swaybg with new background
echo "🔄 Restarting background service..."
pkill -x swaybg 2>/dev/null || true
sleep 0.5

# Start swaybg with the new background
setsid swaybg -i "$CURRENT_BACKGROUND_LINK" -m fill >/dev/null 2>&1 &

# Verify swaybg started
sleep 1
if pgrep -x swaybg >/dev/null; then
    echo "  ✓ Background service restarted successfully"
else
    echo "  ⚠ Background service may not have started properly"
    echo "  Trying alternative method..."
    nohup swaybg -i "$CURRENT_BACKGROUND_LINK" -m fill >/dev/null 2>&1 &
fi

# Reload Hyprland configuration if available
if command -v hyprctl >/dev/null; then
    echo "🔄 Reloading Hyprland configuration..."
    hyprctl reload 2>/dev/null || true
    echo "  ✓ Hyprland configuration reloaded"
fi

echo ""
echo "✅ Background fix complete!"
echo ""
echo "📋 What was fixed:"
echo "  • Cleaned up old cyber-1.png references"
echo "  • Set up proper CypherRiot theme structure"
echo "  • Linked correct background files"
echo "  • Set riot_zero.png as default"
echo "  • Restarted background service"
echo ""
echo "🎮 Available backgrounds (in order):"
if [[ -d "$CYPHERRIOT_BACKGROUNDS" ]]; then
    for bg in "$CYPHERRIOT_BACKGROUNDS"/[0-9][0-9]-*; do
        if [[ -f "$bg" ]]; then
            echo "  • $(basename "$bg")"
        fi
    done
fi
echo ""
echo "💡 Usage:"
echo "  • Switch themes: Super + Ctrl + Shift + Space"
echo "  • Change background: Super + Ctrl + Space"
echo "  • Command line: theme-next"
echo "  • Background cycle: swaybg-next"
echo ""
