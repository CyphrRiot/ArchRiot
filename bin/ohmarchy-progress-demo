#!/bin/bash

# OhmArchy Progress Bar Demo
# Shows fancy themed progress bars for installation UI

set -euo pipefail

# OhmArchy Theme Colors (from CypherRiot theme)
declare -A COLORS=(
    ["RESET"]='\033[0m'
    ["BOLD"]='\033[1m'

    # Primary Colors
    ["BG"]='\033[48;2;26;27;38m'      # #1a1b26 - Dark background
    ["FG"]='\033[38;2;255;255;255m'   # #ffffff - White text

    # Accent Colors
    ["PURPLE"]='\033[38;2;157;123;216m'   # #9d7bd8 - Primary purple
    ["BLUE"]='\033[38;2;125;166;255m'     # #7da6ff - Blue accent
    ["CYAN"]='\033[38;2;13;185;215m'      # #0db9d7 - Cyan accent
    ["GREEN"]='\033[38;2;158;206;106m'    # #9ece6a - Green success
    ["ORANGE"]='\033[38;2;255;158;100m'   # #ff9e64 - Orange warning
    ["RED"]='\033[38;2;255;122;147m'      # #ff7a93 - Red error
    ["YELLOW"]='\033[38;2;224;175;104m'   # #e0af68 - Yellow info

    # UI Colors
    ["WINDOW"]='\033[38;2;74;43;122m'     # #4a2b7a - Window border
    ["COMMENT"]='\033[38;2;104;104;104m'  # #686868 - Muted text
)

# Progress bar characters
FILLED_CHAR="█"
EMPTY_CHAR="░"
PARTIAL_CHARS=("░" "▏" "▎" "▍" "▌" "▋" "▊" "▉" "█")

print_header() {
    echo -e "${COLORS[PURPLE]}${COLORS[BOLD]}"
    echo "╔══════════════════════════════════════════════════════════════╗"
    echo "║              OhmArchy Progress Bar Demo                     ║"
    echo "╚══════════════════════════════════════════════════════════════╝"
    echo -e "${COLORS[RESET]}"
    echo ""
}

draw_progress_bar() {
    local percentage=$1
    local label="${2:-Progress}"
    local width=${3:-50}
    local color="${4:-BLUE}"

    # Calculate filled and empty portions
    local filled_width=$((percentage * width / 100))
    local empty_width=$((width - filled_width))

    # Build the progress bar
    local bar=""

    # Add filled portion
    for ((i=0; i<filled_width; i++)); do
        bar+="$FILLED_CHAR"
    done

    # Add empty portion
    for ((i=0; i<empty_width; i++)); do
        bar+="$EMPTY_CHAR"
    done

    # Print the complete progress bar with theme colors
    printf "${COLORS[FG]}%-20s ${COLORS[WINDOW]}[${COLORS[$color]}%s${COLORS[WINDOW]}]${COLORS[FG]} %3d%%${COLORS[RESET]}\n" \
        "$label" "$bar" "$percentage"
}

draw_fancy_progress_bar() {
    local percentage=$1
    local label="${2:-Progress}"
    local width=${3:-40}
    local color="${4:-PURPLE}"

    # Calculate precise fill
    local precise_fill=$(echo "scale=2; $percentage * $width / 100" | bc)
    local filled_width=${precise_fill%.*}
    local remainder=$(echo "$precise_fill - $filled_width" | bc)

    # Build the bar with smooth partial fill
    local bar=""

    # Add fully filled characters
    for ((i=0; i<filled_width; i++)); do
        bar+="$FILLED_CHAR"
    done

    # Add partial character if needed
    if (( filled_width < width )); then
        local partial_index=$(echo "$remainder * 8" | bc | cut -d. -f1)
        if [[ $partial_index -gt 0 && $partial_index -lt 9 ]]; then
            bar+="${PARTIAL_CHARS[$partial_index]}"
            filled_width=$((filled_width + 1))
        fi
    fi

    # Add empty characters
    local empty_width=$((width - filled_width))
    for ((i=0; i<empty_width; i++)); do
        bar+="$EMPTY_CHAR"
    done

    # Print with enhanced styling
    printf "\r${COLORS[FG]}${COLORS[BOLD]}%-22s${COLORS[RESET]} " "$label"
    printf "${COLORS[WINDOW]}▐${COLORS[$color]}%s${COLORS[WINDOW]}▌ " "$bar"
    printf "${COLORS[$color]}%3d%%${COLORS[RESET]}" "$percentage"
}

simulate_installation_progress() {
    local tasks=(
        "Installing base packages:BLUE"
        "Configuring desktop:PURPLE"
        "Setting up themes:CYAN"
        "Installing applications:GREEN"
        "Optimizing system:ORANGE"
        "Finalizing setup:YELLOW"
    )

    echo -e "${COLORS[CYAN]}${COLORS[BOLD]}Installation Progress:${COLORS[RESET]}"
    echo ""

    for task_info in "${tasks[@]}"; do
        IFS=':' read -r task color <<< "$task_info"

        # Simulate task progress
        for progress in {0..100..5}; do
            draw_fancy_progress_bar "$progress" "$task" 35 "$color"
            sleep 0.05
        done

        # Show completion
        draw_fancy_progress_bar 100 "$task" 35 "GREEN"
        echo ""
        sleep 0.3
    done
}

demo_different_styles() {
    echo -e "${COLORS[PURPLE]}${COLORS[BOLD]}Different Progress Bar Styles:${COLORS[RESET]}"
    echo ""

    # Style 1: Simple bars
    echo -e "${COLORS[COMMENT]}Simple Style:${COLORS[RESET]}"
    draw_progress_bar 25 "Downloading" 40 "BLUE"
    draw_progress_bar 60 "Installing" 40 "PURPLE"
    draw_progress_bar 90 "Configuring" 40 "GREEN"
    echo ""

    # Style 2: Fancy bars
    echo -e "${COLORS[COMMENT]}Fancy Style:${COLORS[RESET]}"
    draw_fancy_progress_bar 25 "System Update" 35 "CYAN"
    draw_fancy_progress_bar 60 "Theme Installation" 35 "PURPLE"
    draw_fancy_progress_bar 90 "Final Optimization" 35 "GREEN"
    echo ""

    # Style 3: Color progression
    # Color progression
    echo -e "${COLORS[COMMENT]}Color Progression:${COLORS[RESET]}"
    for percent in 20 40 60 80 100; do
        local color="RED"
        if [[ $percent -ge 40 ]]; then color="ORANGE"; fi
        if [[ $percent -ge 60 ]]; then color="YELLOW"; fi
        if [[ $percent -ge 80 ]]; then color="GREEN"; fi

        draw_fancy_progress_bar "$percent" "Adaptive Progress" 35 "$color"
        if [[ $percent -lt 100 ]]; then
            sleep 0.5
        else
            echo ""
        fi
    done
}

demo_real_time_updates() {
    echo ""
    echo -e "${COLORS[CYAN]}${COLORS[BOLD]}Real-time Multi-task Progress:${COLORS[RESET]}"
    echo ""

    # Simulate multiple concurrent tasks
    local tasks=(
        "Core System:0:BLUE"
        "Desktop Environment:0:PURPLE"
        "Applications:0:GREEN"
        "Configuration:0:ORANGE"
    )

    # Initial display
    for i in "${!tasks[@]}"; do
        IFS=':' read -r name progress color <<< "${tasks[$i]}"
        draw_fancy_progress_bar 0 "$name" 30 "$color"
        echo ""
    done

    # Update loop
    for iteration in {1..30}; do
        # Move cursor up to overwrite previous lines
        printf "\033[4A"

        # Update each task
        for i in "${!tasks[@]}"; do
            IFS=':' read -r name progress color <<< "${tasks[$i]}"

            # Simulate different progress rates
            case $name in
                "Core System") progress=$((iteration * 4)) ;;
                "Desktop Environment") progress=$(((iteration - 3) * 3)) ;;
                "Applications") progress=$(((iteration - 8) * 5)) ;;
                "Configuration") progress=$(((iteration - 15) * 8)) ;;
            esac

            # Clamp to 0-100
            if [[ $progress -lt 0 ]]; then progress=0; fi
            if [[ $progress -gt 100 ]]; then progress=100; fi

            tasks[$i]="$name:$progress:$color"
            draw_fancy_progress_bar "$progress" "$name" 30 "$color"
            echo ""
        done

        sleep 0.2
    done

    echo ""
}

show_completion_animation() {
    echo -e "${COLORS[GREEN]}${COLORS[BOLD]}"
    echo "✅ Installation Complete!"
    echo ""
    echo "🎨 OhmArchy is ready with beautiful themed progress bars!"
    echo -e "${COLORS[RESET]}"

    # Celebration animation
    local chars=("🎉" "✨" "🌟" "💫" "⭐")
    for i in {1..10}; do
        printf "\r${COLORS[PURPLE]}${chars[$((i % 5))]} Welcome to OhmArchy! ${chars[$((i % 5))]}${COLORS[RESET]}"
        sleep 0.3
    done
    echo ""
}

main() {
    # Check for bc dependency
    if ! command -v bc >/dev/null 2>&1; then
        echo "Installing bc for calculations..."
        sudo pacman -S --noconfirm bc 2>/dev/null || true
    fi

    clear
    print_header

    echo -e "${COLORS[FG]}This demo shows themed progress bars for OhmArchy installation.${COLORS[RESET]}"
    echo ""

    # Demo different styles
    demo_different_styles

    echo ""
    read -p "Press Enter to see simulated installation progress..."
    clear
    print_header

    # Show installation simulation
    simulate_installation_progress

    echo ""
    read -p "Press Enter to see real-time multi-task progress..."

    # Show real-time updates
    demo_real_time_updates

    # Show completion
    show_completion_animation

    echo ""
    echo -e "${COLORS[CYAN]}Progress bar styles ready for integration into OhmArchy installer!${COLORS[RESET]}"
}

main "$@"
