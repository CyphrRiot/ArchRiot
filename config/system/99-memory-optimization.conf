# ArchRiot Memory Management Optimization
# Fixes Linux's aggressive caching behavior that consumes all available RAM

# Reserve 1GB of free memory (1048576 KB)
# Prevents system from caching everything and struggling to free memory when needed
vm.min_free_kbytes=1048576

# Reduce VFS cache pressure - be less aggressive about caching file system metadata
# Default is 100, setting to 50 makes kernel less likely to reclaim directory/inode caches
vm.vfs_cache_pressure=50

# Reduce swappiness - prefer to use RAM before swapping to disk
# Default is 60, setting to 10 makes system much less likely to swap
vm.swappiness=10

# Limit dirty pages to 5% of memory before forcing writes
# Prevents large write bursts that can cause system lag
vm.dirty_ratio=5

# Start background writeback at 2% dirty pages
# Earlier writeback prevents dirty page buildup
vm.dirty_background_ratio=2

# Disable zone reclaim mode for better NUMA performance
# Prevents unnecessary memory reclaim on NUMA systems
vm.zone_reclaim_mode=0

# Memory Overcommit Protection
# Prevent memory overcommit that can cause OOM kills
# Mode 2 = never overcommit more than overcommit_ratio of physical RAM + swap
vm.overcommit_memory=0
vm.overcommit_ratio=50

# Memory Compaction (reduces fragmentation)
# Proactive memory compaction to reduce fragmentation and improve allocation success
# Scale 0-100, higher values mean more aggressive compaction
# vm.compaction_proactiveness=20

# Better OOM Killer behavior
# Prefer killing the allocating task instead of random processes
# Reduces chance of killing important system processes
vm.oom_kill_allocating_task=1

# Enhanced dirty page handling
# Shorter writeback intervals for better responsiveness
# Values in centiseconds (1/100th of a second)
#vm.dirty_writeback_centisecs=500
#vm.dirty_expire_centisecs=3000

# Memory bandwidth optimization
# Reduce memory bandwidth pressure by updating stats less frequently
# Interval in seconds for updating memory statistics
#vm.stat_interval=30

# Memory allocation fairness
# Ensure fair memory allocation across processes
# Helps prevent single processes from monopolizing memory
